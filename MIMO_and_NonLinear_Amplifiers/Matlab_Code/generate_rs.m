
%   ------------------------------------------------------------------------------------------------
%
%   LTE uplink reference signal generation.
%
%   function [rs, q] = generate_rs(Msc,u,v,g[,SRS_flag])
%
%   inputs :
%       ~ Msc       - Length of reference signal
%       ~ u         - Group number                  {0,1,...,29}
%       ~ v         - Sequence number within group  {0,1} if Msc >= 6*12
%       ~ g         - cyclic shift index
%       ~ SRS_flag  - 1 == This is an SRS,  0 == This is not an SRS
%
%   outputs :
%       ~ rs        - reference signal   1=by-Msc
%       ~ q         - root sequence index
%
%   ------------------------------------------------------------------------------------------------


function [rs,q] = generate_rs(Msc,u,v,g,SRS_flag)
%[rs,q] = generate_rs(Msc,u,v,g,SRS_flag)

if nargin < 5
    SRS_flag = 0;
end

if SRS_flag
    alpha = 2*pi*g/8;
else
    alpha = 2*pi*g/12;
end

if Msc < 6*12
    v = 0;
end

if Msc >= 36

    % Calculate Nzc
    primes = Prime_2048;          % List of primes < 2048
    tmp    = find(primes < Msc);
    Nzc    = primes(tmp(end));    % Largest prime such that Nzc < Msc

    % Construct reference signal
    n  = 0:Msc-1;
    qbar = Nzc*(u+1)/31;
    q    = floor(qbar + 1/2) + v*(-1)^floor(2*qbar);
    rs = exp(j.*alpha.*n) .* x_q(mod(n, Nzc),Nzc,q);

else

    if (Msc ~= 12) && (Msc ~= 24)
        disp('Unexpected value for Msc')
    end
    if v ~= 0
        error('For Msc < 36, v must be set to 0')
    end

    n = 0:Msc-1;
    rs = exp(j.*alpha.*n) .* exp(j.*phi_table(n,u,Msc).*pi./4);

    q = u;
end



function xqm = x_q(m,Nzc,q)
%xqm = x_q(m,Nzc,u,v)
%Calculate q'th root ZC sequence

xqm  = exp(-j.*pi.*q.*m.*(m+1)./Nzc);



function result = phi_table(n,u,Msc)

if Msc == 12

    table = [...
        -1	1	3	-3	3	3	1	1	3	1	-3	3; ...
        1	1	3	3	3	-1	1	-3	-3	1	-3	3; ...
        1	1	-3	-3	-3	-1	-3	-3	1	-3	1	-1; ...
        -1	1	1	1	1	-1	-3	-3	1	-3	3	-1; ...
        -1	3	1	-1	1	-1	-3	-1	1	-1	1	3; ...
        1	-3	3	-1	-1	1	1	-1	-1	3	-3	1; ...
        -1	3	-3	-3	-3	3	1	-1	3	3	-3	1; ...
        -3	-1	-1	-1	1	-3	3	-1	1	-3	3	1; ...
        1	-3	3	1	-1	-1	-1	1	1	3	-1	1; ...
        1	-3	-1	3	3	-1	-3	1	1	1	1	1; ...
        -1	3	-1	1	1	-3	-3	-1	-3	-3	3	-1; ...
        3	1	-1	-1	3	3	-3	1	3	1	3	3; ...
        1	-3	1	1	-3	1	1	1	-3	-3	-3	1; ...
        3	3	-3	3	-3	1	1	3	-1	-3	3	3; ...
        -3	1	-1	-3	-1	3	1	3	3	3	-1	1; ...
        3	-1	1	-3	-1	-1	1	1	3	1	-1	-3; ...
        1	3	1	-1	1	3	3	3	-1	-1	3	-1; ...
        -3	1	1	3	-3	3	-3	-3	3	1	3	-1; ...
        -3	3	1	1	-3	1	-3	-3	-1	-1	1	-3; ...
        -1	3	1	3	1	-1	-1	3	-3	-1	-3	-1; ...
        -1	-3	1	1	1	1	3	1	-1	1	-3	-1; ...
        -1	3	-1	1	-3	-3	-3	-3	-3	1	-1	-3; ...
        1	1	-3	-3	-3	-3	-1	3	-3	1	-3	3; ...
        1	1	-1	-3	-1	-3	1	-1	1	3	-1	1; ...
        1	1	3	1	3	3	-1	1	-1	-3	-3	1; ...
        1	-3	3	3	1	3	3	1	-3	-1	-1	3; ...
        1	3	-3	-3	3	-3	1	-1	-1	3	-1	-3; ...
        -3	-1	-3	-1	-3	3	1	-1	1	3	-3	-3; ...
        -1	3	-3	3	-1	3	3	-3	3	3	-1	-1; ...
        3	-3	-3	-1	-1	-3	-1	3	-3	3	1	-1 ...
        ];

    result = table(u+1,n+1);

elseif Msc == 24

    table = [...
        -1	3	1	-3	3	-1	1	3	-3	3	1	3	-3	3	1	1	-1	1	3	-3	3	-3	-1	-3; ...
        -3	3	-3	-3	-3	1	-3	-3	3	-1	1	1	1	3	1	-1	3	-3	-3	1	3	1	1	-3; ...
        3	-1	3	3	1	1	-3	3	3	3	3	1	-1	3	-1	1	1	-1	-3	-1	-1	1	3	3; ...
        -1	-3	1	1	3	-3	1	1	-3	-1	-1	1	3	1	3	1	-1	3	1	1	-3	-1	-3	-1; ...
        -1	-1	-1	-3	-3	-1	1	1	3	3	-1	3	-1	1	-1	-3	1	-1	-3	-3	1	-3	-1	-1; ...
        -3	1	1	3	-1	1	3	1	-3	1	-3	1	1	-1	-1	3	-1	-3	3	-3	-3	-3	1	1; ...
        1	1	-1	-1	3	-3	-3	3	-3	1	-1	-1	1	-1	1	1	-1	-3	-1	1	-1	3	-1	-3; ...
        -3	3	3	-1	-1	-3	-1	3	1	3	1	3	1	1	-1	3	1	-1	1	3	-3	-1	-1	1; ...
        -3	1	3	-3	1	-1	-3	3	-3	3	-1	-1	-1	-1	1	-3	-3	-3	1	-3	-3	-3	1	-3; ...
        1	1	-3	3	3	-1	-3	-1	3	-3	3	3	3	-1	1	1	-3	1	-1	1	1	-3	1	1; ...
        -1	1	-3	-3	3	-1	3	-1	-1	-3	-3	-3	-1	-3	-3	1	-1	1	3	3	-1	1	-1	3; ...
        1	3	3	-3	-3	1	3	1	-1	-3	-3	-3	3	3	-3	3	3	-1	-3	3	-1	1	-3	1; ...
        1	3	3	1	1	1	-1	-1	1	-3	3	-1	1	1	-3	3	3	-1	-3	3	-3	-1	-3	-1; ...
        3	-1	-1	-1	-1	-3	-1	3	3	1	-1	1	3	3	3	-1	1	1	-3	1	3	-1	-3	3; ...
        -3	-3	3	1	3	1	-3	3	1	3	1	1	3	3	-1	-1	-3	1	-3	-1	3	1	1	3; ...
        -1	-1	1	-3	1	3	-3	1	-1	-3	-1	3	1	3	1	-1	-3	-3	-1	-1	-3	-3	-3	-1; ...
        -1	-3	3	-1	-1	-1	-1	1	1	-3	3	1	3	3	1	-1	1	-3	1	-3	1	1	-3	-1; ...
        1	3	-1	3	3	-1	-3	1	-1	-3	3	3	3	-1	1	1	3	-1	-3	-1	3	-1	-1	-1; ...
        1	1	1	1	1	-1	3	-1	-3	1	1	3	-3	1	-3	-1	1	1	-3	-3	3	1	1	-3; ...
        1	3	3	1	-1	-3	3	-1	3	3	3	-3	1	-1	1	-1	-3	-1	1	3	-1	3	-3	-3; ...
        -1	-3	3	-3	-3	-3	-1	-1	-3	-1	-3	3	1	3	-3	-1	3	-1	1	-1	3	-3	1	-1; ...
        -3	-3	1	1	-1	1	-1	1	-1	3	1	-3	-1	1	-1	1	-1	-1	3	3	-3	-1	1	-3; ...
        -3	-1	-3	3	1	-1	-3	-1	-3	-3	3	-3	3	-3	-1	1	3	1	-3	1	3	3	-1	-3; ...
        -1	-1	-1	-1	3	3	3	1	3	3	-3	1	3	-1	3	-1	3	3	-3	3	1	-1	3	3; ...
        1	-1	3	3	-1	-3	3	-3	-1	-1	3	-1	3	-1	-1	1	1	1	1	-1	-1	-3	-1	3; ...
        1	-1	1	-1	3	-1	3	1	1	-1	-1	-3	1	1	-3	1	3	-3	1	1	-3	-3	-1	-1; ...
        -3	-1	1	3	1	1	-3	-1	-1	-3	3	-3	3	1	-3	3	-3	1	-1	1	-3	1	1	1; ...
        -1	-3	3	3	1	1	3	-1	-3	-1	-1	-1	3	1	-3	-3	-1	3	-3	-1	-3	-1	-3	-1; ...
        -1	-3	-1	-1	1	-3	-1	-1	1	-1	-3	1	1	-3	1	-3	-3	3	1	1	-1	3	-1	-1; ...
        1	1	-1	-1	-3	-1	3	-1	3	-1	1	3	1	-1	3	1	3	-3	-3	1	-1	-1	1	3 ...
        ];

    result = table(u+1,n+1);

else
    disp('Unexpected value for Msc')
end


